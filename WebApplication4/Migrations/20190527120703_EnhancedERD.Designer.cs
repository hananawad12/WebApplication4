// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WeddingGo.Models;

namespace WeddingGo.Migrations
{
    [DbContext(typeof(WeddingContext))]
    [Migration("20190527120703_EnhancedERD")]
    partial class EnhancedERD
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WeddingGo.Models.Atelier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AtelierId");

                    b.HasKey("Id");

                    b.HasIndex("AtelierId")
                        .IsUnique();

                    b.ToTable("Ateliers");
                });

            modelBuilder.Entity("WeddingGo.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Location");

                    b.Property<string>("Name");

                    b.Property<int>("Password");

                    b.Property<int>("Phone");

                    b.Property<int>("Rating");

                    b.HasKey("Id");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("WeddingGo.Models.MakeupArtist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("MakeupArtistId");

                    b.HasKey("Id");

                    b.HasIndex("MakeupArtistId")
                        .IsUnique();

                    b.ToTable("MakeupArtists");
                });

            modelBuilder.Entity("WeddingGo.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("ClientId");

                    b.Property<string>("Details");

                    b.Property<string>("Nmae");

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("WeddingGo.Models.Photographer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("PhotographerId");

                    b.HasKey("Id");

                    b.HasIndex("PhotographerId")
                        .IsUnique();

                    b.ToTable("Photographers");
                });

            modelBuilder.Entity("WeddingGo.Models.WeddingHall", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("WeddingHallId");

                    b.HasKey("Id");

                    b.HasIndex("WeddingHallId")
                        .IsUnique();

                    b.ToTable("WeddingHalls");
                });

            modelBuilder.Entity("WeddingGo.Models.Atelier", b =>
                {
                    b.HasOne("WeddingGo.Models.Client", "Client")
                        .WithOne("Atelier")
                        .HasForeignKey("WeddingGo.Models.Atelier", "AtelierId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WeddingGo.Models.MakeupArtist", b =>
                {
                    b.HasOne("WeddingGo.Models.Client", "Client")
                        .WithOne("MakeupArtist")
                        .HasForeignKey("WeddingGo.Models.MakeupArtist", "MakeupArtistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WeddingGo.Models.Package", b =>
                {
                    b.HasOne("WeddingGo.Models.Client", "Client")
                        .WithMany("Packages")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("WeddingGo.Models.Photographer", b =>
                {
                    b.HasOne("WeddingGo.Models.Client", "Client")
                        .WithOne("Photographer")
                        .HasForeignKey("WeddingGo.Models.Photographer", "PhotographerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WeddingGo.Models.WeddingHall", b =>
                {
                    b.HasOne("WeddingGo.Models.Client", "Client")
                        .WithOne("WeddingHall")
                        .HasForeignKey("WeddingGo.Models.WeddingHall", "WeddingHallId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
